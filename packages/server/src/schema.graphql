# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Lesson {
  id: ID!
  start: DateTime!
  end: DateTime!
  comment: String!
  teacher: Teacher!
  numberOfPeople: Float
  student: Student
}

"""Lesson Status"""
enum LessonStatus {
  Hidden
  DisplayOnly
  Bookable
  Booked
  Cancelled
}

type Mutation {
  addLesson(teacherId: ID!, start: DateTime!, end: DateTime!, comment: String = "", status: LessonStatus = Hidden, repeatWeeks: Int!): Boolean!
  editLesson(id: ID!, studentId: ID, teacherId: ID!, start: DateTime!, end: DateTime!, comment: String!, status: LessonStatus!): Lesson!
  setComment(id: ID!, comment: String!): Lesson!
  deleteLesson(id: ID!, cancelReason: String): String!
  addStudent(name: String!, phone: String = "", emergencyName: String = "", emergencyRelation: String = "", emergencyPhone: String = "", detailedAddress: String = ""): Student!
  editStudent(id: ID!, name: String, phone: String, emergencyName: String, emergencyRelation: String, emergencyPhone: String, detailedAddress: String): Student!
  addTeacher(name: String!, hourPrice: Int!): Teacher!
  deleteTeacher(id: ID!): Boolean!
  updateTeacher(id: ID!, name: String!, hourPrice: Int!, color: String!): Teacher!
  logout: Boolean!
  login(username: String!, password: String!): User!
}

type Query {
  lessons: [Lesson!]!
  students: [Student!]!
  student(id: ID!): Student!
  teachers: [Teacher!]!
  me: User
  user(id: ID!): User!
  users: [User!]!
}

type Student {
  id: ID!
  name: String!
  phone: String!
  emergencyName: String!
  emergencyRelation: String!
  emergencyPhone: String!
  detailedAddress: String!
  bookedLessons: [Lesson!]!
}

type Teacher {
  id: ID!
  name: String!
  lessons: [Lesson!]
  hourPrice: Float!
  color: String!
}

type User {
  id: ID!
  email: String!
  role: UserRole!
  username: String
}

"""User Roles"""
enum UserRole {
  Admin
  User
  NewUser
}
