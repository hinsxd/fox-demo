# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type CartItem {
  id: ID!
  lesson: Lesson!
  user: User!
  numberOfPeople: Int!
  price: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Lesson {
  id: ID!
  start: DateTime!
  end: DateTime!
  comment: String!
  teacher: Teacher!
  numberOfPeople: Float
  price: Float
  student: User
  status: LessonStatus!
  cancelReason: String!
  bookable: Boolean!
  visible: Boolean!
  cancelled: Boolean!
  booked: Boolean!
  locked: Boolean!
  inCart: Boolean!
}

"""Lesson Status"""
enum LessonStatus {
  Hidden
  DisplayOnly
  Bookable
  Booked
  Cancelled
}

type Mutation {
  setNumberOfPeople(lessonId: ID!, numberOfPeople: Int!): CartItem
  addLesson(teacherId: ID!, start: DateTime!, end: DateTime!, comment: String = "", status: LessonStatus = Hidden, repeatWeeks: Int!): Boolean!
  editLesson(id: ID!, teacherId: ID!, start: DateTime!, end: DateTime!, comment: String!, cancelReason: String!, status: LessonStatus!): Lesson!
  addToCart(id: ID!): Boolean!
  removeFromCart(id: ID!): Boolean!
  bookLessons(cartItemIds: [String!]!, amount: Int!, source: String!, ccLast4: String!): [Lesson!]!
  setComment(id: ID!, comment: String!): Lesson!
  swapLesson(fromId: ID!, toId: ID!, source: String!, ccLast4: String!): Lesson!
  deleteLesson(id: ID!, cancelReason: String): String!
  setLessonsStatus(from: DateTime!, to: DateTime!, status: LessonStatus!): [Lesson!]!
  addTeacher(name: String!, hourPrice: Int!): Teacher!
  deleteTeacher(id: ID!): Boolean!
  updateTeacher(id: ID!, name: String!, hourPrice: Int!, color: String!): Teacher!
  logout: Boolean!
  completeProfile(username: String!, password: String!, name: String!, email: String!, phone: String!, emergencyName: String!, emergencyRelation: String!, emergencyPhone: String!, detailedAddress: String): User!
  login(username: String!, password: String!): User!
  updateProfile(name: String, email: String, phone: String, emergencyName: String, emergencyRelation: String, emergencyPhone: String, region: String, district: String, street: String, detailedAddress: String): User!
}

type Query {
  lessons(start: DateTime, end: DateTime): [Lesson!]!
  teachers: [Teacher!]!
  me: User
  user(id: ID!): User!
  users: [User!]!
  checkUsernameUsed(username: String!): Boolean!
}

type Teacher {
  id: ID!
  name: String!
  lessons: [Lesson!]
  hourPrice: Float!
  color: String!
}

type User {
  profile: UserProfile
  id: ID!
  email: String!
  role: UserRole!
  username: String
  bookedLessons(type: String, count: Int): [Lesson!]!
  cancelledLessons(type: String, count: Int): [Lesson!]!
  cart: [Lesson!]!
  cartItems: [CartItem!]!
}

type UserProfile {
  id: ID!
  name: String!
  phone: String!
  email: String!
  emergencyName: String!
  emergencyRelation: String!
  emergencyPhone: String!
  detailedAddress: String!
}

"""User Roles"""
enum UserRole {
  Admin
  User
  NewUser
}
